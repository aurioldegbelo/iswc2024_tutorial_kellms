# -*- coding: utf-8 -*-
"""Tutorial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13wcvTzPGKJG3kj-KBFWs9MI5Fg7vHkDJ
"""



#from langchain.chains import GraphSparqlQAChain
from langchain_community.graphs import RdfGraph
from langchain_openai import ChatOpenAI
from qachain import GraphSparqlQAChain
"""
Question answering over an RDF or OWL graph using SPARQL.
"""




graph = RdfGraph(
    source_file="https://dbpedia.org/data/Barack_Obama.ttl",
    standard="rdf",
    local_copy="test.ttl",
)

graph.load_schema()

graph.get_schema

import os

if "OPENAI_API_KEY" not in os.environ:
    os.environ["OPENAI_API_KEY"] = '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'

chain = GraphSparqlQAChain.from_llm(
    ChatOpenAI(temperature=0), graph=graph, verbose=True, allow_dangerous_requests=True
)

"""# Basic Query"""

instruction = "ADDITIONAL INSTRUCTION: When you make the final query, remove these ``` quotes and only have the query \n"
query = "QUERY: Where was barak obama born?"
prompt = instruction + query
print(prompt)

print(chain.run(prompt))

instruction = "ADDITIONAL INSTRUCTION: When you make the final query, remove these ``` quotes and only have the query \n"
query = "QUERY: How many children did Barak Obama have and also name them?"
prompt = instruction + query
print(prompt)
print(chain.run(prompt))

"""**Here we try to check if it can do multihop queries **

---


"""

instruction = "ADDITIONAL INSTRUCTION: 1. When you make the final query, remove these ``` quotes and only have the query \n 2. Whenever yo uare constructing the query naver makeup the name of the entities, always try to make generic queries and then filter out the query for the entity \n. 3. After you create the query first check for any syntax error and if there is a syntax error then rewrite the query"
query = "QUERY: What is the name of mother of barak obamas children?"
prompt = instruction + query
print(prompt)
print(chain.run(prompt))

instruction = "ADDITIONAL INSTRUCTION: When you make the final query, remove these ``` quotes and only have the query \n"
query = "QUERY: Was obama the first black predisent of usa?" #ALWAYS GIVES INCONSISTENT QUERIES
prompt = instruction + query
print(prompt)
print(chain.run(prompt))

instruction = "ADDITIONAL INSTRUCTION: When you make the final query, remove these ``` quotes and only have the query \n"
query = "QUERY: Can you desrcibe in brief about barak obama?"
prompt = instruction + query
print(prompt)
print(chain.run(prompt))

instruction = "ADDITIONAL INSTRUCTION: When you make the final query, remove these ``` quotes and only have the query \n"
query = "QUERY: What was the period of Barak obamas fifth presidency?" #This is wrong answer, as obama had no fifth term
prompt = instruction + query
print(prompt)

print(chain.run(prompt))

"""Observations:
1. The underlying models plays a vital role here
2. The Sparql generated is not very consistent
"""

instruction = "ADDITIONAL INSTRUCTION: When you make the final query, remove these ``` quotes and only have the query \n"
query = "QUERY:Number of cars audi has given to barak obama?"
prompt = instruction + query
print(prompt)
print(chain.run(prompt))

